var app=function(e){"use strict";self.fetch||(self.fetch=function(e,t){return t=t||{},new Promise((o,r)=>{const s=new XMLHttpRequest,n=[],a=[],c={},i=()=>({ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:()=>Promise.resolve(s.responseText),json:()=>Promise.resolve(JSON.parse(s.responseText)),blob:()=>Promise.resolve(new Blob([s.response])),clone:i,headers:{keys:()=>n,entries:()=>a,get:e=>c[e.toLowerCase()],has:e=>e.toLowerCase()in c}});s.open(t.method||"get",e,!0),s.onload=()=>{s.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(e,t,o)=>{n.push(t=t.toLowerCase()),a.push([t,o]),c[t]=c[t]?`${c[t]},${o}`:o}),o(i())},s.onerror=r,s.withCredentials="include"==t.credentials;for(const e in t.headers)s.setRequestHeader(e,t.headers[e]);s.send(t.body||null)})});var t=function(e){var t=e.uri,o=e.name,r=e.type;this.uri=t,this.name=o,this.type=r};function o(e){const o={url:"/graphql",method:"POST",headers:{Accept:"application/json"}},{clone:r,files:s}=function e(o,r){var s;void 0===r&&(r="");var n=new Map;function a(e,t){var o=n.get(t);o?o.push.apply(o,e):n.set(t,e)}if("undefined"!=typeof File&&o instanceof File||"undefined"!=typeof Blob&&o instanceof Blob||o instanceof t)s=null,a([r],o);else{var c=r?r+".":"";if("undefined"!=typeof FileList&&o instanceof FileList)s=Array.prototype.map.call(o,(function(e,t){return a([""+c+t],e),null}));else if(Array.isArray(o))s=o.map((function(t,o){var r=e(t,""+c+o);return r.files.forEach(a),r.clone}));else if(o&&o.constructor===Object)for(var i in s={},o){var l=e(o[i],""+c+i);l.files.forEach(a),s[i]=l.clone}else s=o}return{clone:s,files:n}}(e),n=JSON.stringify(r);if(s.size){const e=new FormData;e.append("operations",n);const t={};let r=0;s.forEach(e=>{t[++r]=e}),e.append("map",JSON.stringify(t)),r=0,s.forEach((t,o)=>{e.append(`${++r}`,o,o.name)}),o.body=e}else o.headers["Content-Type"]="application/json",o.body=n;return o}function r(e){for(var t=r.BASE,o=0,s=e.length;o<s;o++)t^=e.charCodeAt(o),t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24);return t>>>0}r.BASE=2166136261;var s=r;function n(e,t){const o=this[e];if("undefined"!=typeof FormData&&o instanceof FormData){let e="";const t=o.entries();let r=t.next();for(;!r.done;){const[o,s]=r.value;e+=`${o}${s}`,r=t.next()}return e}return t}const a=e=>s(JSON.stringify(e,n)).toString(36);function c(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}return e.GraphQL=class{constructor({cache:e={}}={}){c(this,"reload",e=>{this.emit("reload",{exceptCacheKey:e})}),c(this,"reset",e=>{let t=Object.keys(this.cache);e&&(t=t.filter(t=>t!==e)),t.forEach(e=>delete this.cache[e]),this.emit("reset",{exceptCacheKey:e})}),c(this,"fetch",({url:e,...t},o)=>{let r;const s="function"==typeof fetch?fetch:()=>Promise.reject(new Error("Global fetch API or polyfill unavailable.")),n={},a=s(e,t).then(e=>(r=e,e.ok||(n.httpError={status:e.status,statusText:e.statusText}),e.json().then(({errors:e,data:t})=>{if(e||t||(n.parseError="Malformed payload."),e)throw new Error(JSON.stringify(e));t&&(n.data=t)},({message:e})=>{n.parseError=e})),({message:e})=>{n.fetchError=e}).then(()=>(this.cache[o]=n,delete this.operations[o],this.emit("cache",{cacheKey:o,cacheValue:n,response:r}),n));return this.operations[o]=a,this.emit("fetch",{cacheKey:o,cacheValuePromise:a}),a}),c(this,"operate",({operation:e,fetchOptionsOverride:t,reloadOnLoad:r,resetOnLoad:s})=>{if(r&&s)throw new Error("operate() options “reloadOnLoad” and “resetOnLoad” can’t both be true.");const n=o(e);t&&t(n);const c=a(n),i=this.operations[c]||this.fetch(n,c);return i.then(()=>{r?this.reload(c):s&&this.reset(c)}),{cacheKey:c,cacheValue:this.cache[c],cacheValuePromise:i}});const{on:t,off:r,emit:s}=(n=n||Object.create(null),{on:function(e,t){(n[e]||(n[e]=[])).push(t)},off:function(e,t){n[e]&&n[e].splice(n[e].indexOf(t)>>>0,1)},emit:function(e,t){(n[e]||[]).slice().map((function(e){e(t)})),(n["*"]||[]).slice().map((function(o){o(e,t)}))}});var n;this.on=t,this.off=r,this.emit=s,this.cache=e,this.operations={}}},e.reportCacheErrors=function({cacheKey:e,cacheValue:{fetchError:t,httpError:o,parseError:r,graphQLErrors:s}}){(t||o||r||s)&&(console.groupCollapsed(`GraphQL cache errors for key “${e}”:`),t&&(console.groupCollapsed("Fetch:"),console.log(t),console.groupEnd()),o&&(console.groupCollapsed("HTTP:"),console.log(`Status: ${o.status}`),console.log(`Text: ${o.statusText}`),console.groupEnd()),r&&(console.groupCollapsed("Parse:"),console.log(r),console.groupEnd()),s&&(console.groupCollapsed("GraphQL:"),s.forEach(({message:e})=>console.log(e)),console.groupEnd()),console.groupEnd())},e}({});
//# sourceMappingURL=grpahql-svelte.js.map
